services:
  # Serviço do Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cha_de_panela_backend
    # Disponibiliza as variáveis do .env para o ambiente do container.
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    # COMANDO CORRIGIDO para usar a variável certa: POSTGRES_USER
    command: sh -c "while ! pg_isready -h db -p 5432 -U ${POSTGRES_USER}; do sleep 1; done; node dist/main.js"

  # Serviço do Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cha_de_panela_frontend
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network

  # Serviço do Banco de Dados
  db:
    image: postgres:14-alpine
    container_name: cha_de_panela_db
    # Esta seção usa o .env da raiz para configurar o banco.
    # Os nomes aqui (POSTGRES_USER, POSTGRES_DB) são os esperados pela imagem do Postgres.
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # HEALTHCHECK CORRIGIDO para usar as variáveis certas.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
